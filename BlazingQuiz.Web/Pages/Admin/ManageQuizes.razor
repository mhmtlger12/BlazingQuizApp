@page "/admin/manage-quizes"
@inject IQuizApi QuizApi
@inject ICategoryApi CategoryApi
<div class="container py-5">
    <h1 class="display-4 text-center mb-4">Testleri Yönet</h1>
    <hr />
    <div class="row justify-content-center">
        <!-- Kategori Seçimi -->
        <div class="col-sm-4 mb-4">
            <label class="form-label fw-semibold">Kategori Seçiniz</label>
            <select class="form-select form-select-lg" @bind="_selectedcategory" @bind:after="OnSelectedCategoryChanged">
                <option value="0" disabled>Kategori Seçiniz</option>
                @foreach (var c in _categories)
                {
                    <option value="@c.Id">@c.Name</option>
                }
            </select>
        </div>
    </div>

    <!-- Test Tablosu -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <table class="table table-striped table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Test Adı</th>
                                <th>Kategori</th>
                                <th>Soru Sayısı</th>
                                <th>Süre (dakika)</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (_filteredQuizes.Length == 0)
                            {
                                <tr>
                                    <td colspan="5" class="text-center text-danger">
                                        <p><i class="bi bi-x-circle"></i> Test Bulunamadı</p>
                                    </td>
                                </tr>
                            }
                            else
                            {
                                foreach (var q in _filteredQuizes)
                                {
                                    <tr>
                                        <td>@q.Name</td>
                                        <td>@q.CategoryName</td>
                                        <td>@q.TotalQuestions</td>
                                        <td>@q.TimeInMinutes</td>
                                        <td>
                                            <div class="d-flex justify-content-around">
                                                <button type="button" class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#questionsModal"
                                                @onclick="()=>ViewQuestionsAsync(q)">
                                                    <i class="bi bi-eye"></i> Görüntüle
                                                </button>
                                                <a href="admin/edit-quiz/@q.Id" type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editQuizModal">
                                                    <i class="bi bi-pencil-square"></i> Düzenle
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Görüntüleme için Örnek -->
<!-- Soruları Görüntüle Modal -->
<div class="modal fade" id="questionsModal" tabindex="-1" aria-labelledby="questionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="questionsModalLabel">Soruları Görüntüle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Sorular burada listelenecek -->
                <p>Test soruları burada görüntülenecek...</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<!-- Düzenleme Modal -->
<div class="modal fade" id="editQuizModal" tabindex="-1" aria-labelledby="editQuizModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editQuizModalLabel">Sınavı Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Düzenleme formu burada olacak -->
                <p>Sınav düzenleme formu...</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@if (_showQuestionsModal)
{
  <Modal Title="Sorular" ActionButtonText="Ok" OnActionButtonClick="()=>_showQuestionsModal=false"
  OnCancelClick="()=>_showQuestionsModal=false" Size="ModalSize.Large">
    @foreach (var q in _viewingQuestions)
    {
        <div class="mb-3 shadow p-2 ">
            @q.Text
        </div>
    }

  </Modal>
}

@code {
    private QuizListDto[] _quizess = [];
    private QuizListDto[] _filteredQuizes = [];

    private CategoryDto[] _categories = [];
    private int _selectedcategory;

    private QuestionDto[] _viewingQuestions = [];
    private bool _showQuestionsModal;
    protected override async Task OnInitializedAsync()
    {
        var quizesTask = QuizApi.GetQuizesAsync();
        _categories = await CategoryApi.GetCategoriesAsync();
        _quizess = await quizesTask;
        _filteredQuizes = _quizess;
    }
    private void OnSelectedCategoryChanged()
    {
        if (_selectedcategory == 0)
            _filteredQuizes = _quizess;
        else
            _filteredQuizes = _quizess.Where(q => q.CategoryId == _selectedcategory)
            .ToArray();
    }
    private async Task ViewQuestionsAsync(QuizListDto q)
    {
        _viewingQuestions = await QuizApi.GetQuizQuestionsAsync(q.Id);

        _viewingQuestions = [.. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions, .. _viewingQuestions];
        _showQuestionsModal = true;

    }
}
